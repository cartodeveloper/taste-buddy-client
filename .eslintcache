[{"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\index.js":"1","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\App.js":"2","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\reportWebVitals.js":"3","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Nav.js":"4","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\config.js":"5","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Signup.js":"6","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Login.js":"7","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\LadingPage.js":"8","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\AddTasting.js":"9","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Home.js":"10","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Dashboard.js":"11","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\TastingList.js":"12","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\TastingItem.js":"13","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Context.js":"14","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\DeleteButton.js":"15","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\EditTasting.js":"16","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Utils\\PrivateRoute.js":"17","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\services\\auth-api-service.js":"18","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\services\\token-service.js":"19"},{"size":593,"mtime":1607179457035,"results":"20","hashOfConfig":"21"},{"size":2793,"mtime":1608211854569,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2158,"mtime":1608230999843,"results":"24","hashOfConfig":"21"},{"size":265,"mtime":1608059894683,"results":"25","hashOfConfig":"21"},{"size":2106,"mtime":1608063947994,"results":"26","hashOfConfig":"21"},{"size":2108,"mtime":1608231048275,"results":"27","hashOfConfig":"21"},{"size":1719,"mtime":1607348592533,"results":"28","hashOfConfig":"21"},{"size":28388,"mtime":1608221292730,"results":"29","hashOfConfig":"21"},{"size":1717,"mtime":1607363579251,"results":"30","hashOfConfig":"21"},{"size":509,"mtime":1608127628374,"results":"31","hashOfConfig":"21"},{"size":3477,"mtime":1608212209972,"results":"32","hashOfConfig":"21"},{"size":3156,"mtime":1608233614933,"results":"33","hashOfConfig":"21"},{"size":90,"mtime":1607899661912,"results":"34","hashOfConfig":"21"},{"size":1070,"mtime":1608227977167,"results":"35","hashOfConfig":"21"},{"size":31265,"mtime":1608225687303,"results":"36","hashOfConfig":"21"},{"size":623,"mtime":1608125483855,"results":"37","hashOfConfig":"21"},{"size":687,"mtime":1608144347113,"results":"38","hashOfConfig":"21"},{"size":377,"mtime":1608232703545,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"43gnol",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\index.js",[],["84","85"],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\App.js",["86"],"import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport config from \"./config\";\nimport Nav from \"./Components/Nav\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport LandingPage from \"./Components/LadingPage\";\nimport AddTasting from \"./Components/AddTasting\";\nimport Home from \"./Components/Home\";\nimport Dashboard from \"./Components/Dashboard\";\nimport TastingList from \"./Components/TastingList\";\nimport Context from \"./Context\";\nimport EditTasting from \"./Components/EditTasting\";\nimport PrivateRoute from \"./Utils/PrivateRoute\";\nimport tokenService from \"./services/token-service\";\n\nclass App extends Component {\n  state = {\n    user: {},\n    tastings: [],\n    error: null,\n    setTastings: (tastings) => {\n      this.setState({\n        tastings,\n        error: null,\n      });\n    },\n    deleteTasting: (id) => {\n      this.setState({\n        tastings: this.state.tastings.filter((tasting) => tasting.id !== id),\n      });\n    },\n    addTasting: (newTasting) => {\n      this.setState({\n        tastings: [...this.state.tastings, newTasting],\n      });\n    },\n    updateTasting: (newTasting, id) => {\n      this.setState({\n        tastings: this.state.tastings.map((t) => {\n          if (t.id === id) {\n            return newTasting;\n          }\n          return t;\n        }),\n      });\n    },\n    getTastings: () => {\n      fetch(`${config.API_BASE_URL}/tastings`, {\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          Authorization: `Bearer ${tokenService.getAuthToken()}`,\n        },\n      })\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(res.status);\n          }\n          return res.json();\n        })\n        .then(this.state.setTastings)\n        .catch((error) => this.setState({ error }));\n    },\n    loginUser: (user) => {\n      return this.setState({ user });\n    },\n  };\n\n  componentDidMount() {\n    this.state.getTastings();\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        <div className=\"app\">\n          <Route path=\"/\" component={Nav} />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/login\" component={Login} />\n          <div className=\"main\">\n            <PrivateRoute path=\"/tastings/add\" component={AddTasting} />\n            <PrivateRoute path=\"/edittasting/:id\" component={EditTasting} />\n            <PrivateRoute path=\"/home\" component={Home} />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/tastings\" component={TastingList} />\n          </div>\n        </div>\n      </Context.Provider>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\reportWebVitals.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Nav.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\config.js",["87"],"export default {\r\n  PORT: process.env.PORT || 8000,\r\n  API_BASE_URL: process.env.API_BASE_URL || \"http://localhost:8000/api\",\r\n  API_KEY: \"1deb04f5-69ce-4150-8230-86afc6b0958c\",\r\n  //for later use to auth the user w/the api.\r\n  TOKEN_KEY: \"taste-buddy-token\",\r\n};\r\n","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Signup.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Login.js",["88"],"import React from \"react\";\r\nimport AuthAPIService from \"../services/auth-api-service\";\r\nimport config from \"../config\";\r\nimport TokenService from \"../services/token-service\";\r\nimport Context from \"../Context\";\r\n\r\nexport default class Login extends React.Component {\r\n  static contextType = Context;\r\n  state = {\r\n    error: null,\r\n  };\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = e.target;\r\n    this.setState({ error: null });\r\n    const user = { email: email.value, password: password.value };\r\n\r\n    AuthAPIService.loginUser(user)\r\n      .then((loginResponse) => {\r\n        TokenService.saveAuthToken(loginResponse.authToken);\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch((res) => {\r\n        this.setState({ error: res.error });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h3>Login</h3>\r\n        <form\r\n          className=\"form\"\r\n          aria-label=\"login-form\"\r\n          onSubmit={this.handleLogin}\r\n        >\r\n          {this.state.error && <p className=\"error\">{this.state.error}</p>}\r\n          <fieldset aria-label=\"email\">\r\n            <div className=\"flex-wrap\">\r\n              <label className=\"login-email\" htmlFor=\"email\">\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={(e) => console.log(e)}\r\n              />\r\n            </div>\r\n            <div className=\"flex-wrap\">\r\n              <label htmlFor=\"password\" className=\"login-pw\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) => console.log(e)}\r\n              />\r\n            </div>\r\n\r\n            <button className=\"login\" type=\"submit\" aria-label=\"login\">\r\n              Login\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\LadingPage.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\AddTasting.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Home.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\Dashboard.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\TastingList.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\TastingItem.js",["89","90","91","92","93","94"],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Context.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\DeleteButton.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Components\\EditTasting.js",["95","96"],"import React, { Component } from \"react\";\r\nimport config from \"../config\";\r\nimport Context from \"../Context\";\r\nimport { CountryDropdown } from \"react-country-region-selector\";\r\n\r\nclass EditTasting extends Component {\r\n  static contextType = Context;\r\n  state = {\r\n    error: null,\r\n    newTasting: {},\r\n  };\r\n\r\n  selectCountry(val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      newTasting: { ...this.state.newTasting, [e.target.name]: e.target.value },\r\n    });\r\n  }\r\n  handleClickCancel = () => {\r\n    this.props.history.push(\"/tastings\");\r\n  };\r\n  //Submit Form Tastings\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = Number(this.props.match.params.id);\r\n    this.setState({ error: null });\r\n    /*fetch(`${config.API_BASE_URL}/tastings/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(this.state.newTasting),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        authorization: `Bearer ${tokenService.getAuthToken()}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          return res.json().then((error) => {\r\n            throw error;\r\n          });\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((newTasting) => {\r\n        e.target.reset();\r\n        this.setState({\r\n          tastings: [...this.state.tastings, newTasting],\r\n          newTasting: {},\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        this.setState({ error: e.message });\r\n      });*/\r\n\r\n    this.context.updateTasting(this.state.newTasting, id);\r\n    this.props.history.push(\"/tastings\");\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = Number(this.props.match.params.id);\r\n    const tasting = this.context.tastings.find((t) => t.id === id);\r\n    this.setState({\r\n      newTasting: tasting,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, newTasting } = this.state;\r\n\r\n    return newTasting ? (\r\n      <div>\r\n        <h2>DEDUCTIVE FORMAT</h2>\r\n        <form\r\n          className=\"add-tasting\"\r\n          aria-label=\"add-tasting\"\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n        >\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <div className=\"winename\">\r\n            <label htmlFor=\"winename\" aria-label=\"winename\">\r\n              Name:\r\n            </label>\r\n            <input\r\n              placeholder=\"eg. Yacochuya\"\r\n              type=\"text\"\r\n              id=\"winename\"\r\n              value={newTasting.winename}\r\n              name=\"winename\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"producer\">\r\n            <label htmlFor=\"producer\" aria-label=\"producer\">\r\n              Producer:\r\n            </label>\r\n            <input\r\n              placeholder=\"eg.The Etcharts\"\r\n              type=\"text\"\r\n              id=\"producer\"\r\n              value={newTasting.producer}\r\n              name=\"producer\"\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"varietal\">\r\n            <label htmlFor=\"varietal\" aria-label=\"varietal\">\r\n              Varietal:\r\n            </label>\r\n            <input\r\n              placeholder=\"eg.Malbec\"\r\n              type=\"text\"\r\n              id=\"varietal\"\r\n              name=\"varietal\"\r\n              value={newTasting.varietal}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"vintage\">\r\n            <label htmlFor=\"vintage\" aria-label=\"vintage\">\r\n              Vintage:\r\n            </label>\r\n            <input\r\n              placeholder=\"eg.2017\"\r\n              type=\"number\"\r\n              id=\"vintage\"\r\n              name=\"vintage\"\r\n              value={newTasting.vintage}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"region\">\r\n            <label htmlFor=\"region\" aria-label=\"region\">\r\n              Region:\r\n            </label>\r\n            <input\r\n              placeholder=\"eg.Salta's Cafayete valle\"\r\n              type=\"text\"\r\n              id=\"region\"\r\n              name=\"region\"\r\n              defaultValue=\"Veneto\"\r\n              value={newTasting.region}\r\n              onChange={(e) => this.handleChange(e)}\r\n            />\r\n          </div>\r\n          <fieldset>\r\n            <legend>Sigh</legend>\r\n            <div className=\"condition\">\r\n              <label htmlFor=\"condition\" aria-label=\"condition\">\r\n                Condition:\r\n              </label>\r\n              <select\r\n                name=\"condition\"\r\n                value={newTasting.condition}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"clear\">Clear</option>\r\n                <option value=\"hazy\">Hazy</option>\r\n                <option value=\"turbid\">Turbid</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"concentration\">\r\n              <label htmlFor=\"concentration\" aria-label=\"concentration\">\r\n                Concentration:\r\n              </label>\r\n              <select\r\n                name=\"concentration\"\r\n                value={newTasting.concentration}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"pale\">Pale</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"deep\">Deep</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"color\">\r\n              <h3>Color</h3>\r\n              <div className=\"colorwhite\">\r\n                <label htmlFor=\"colorwhite\" aria-label=\"colorwhite\">\r\n                  White Wines:\r\n                </label>\r\n                <select\r\n                  name=\"colorwhite\"\r\n                  value={newTasting.colorwhite}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"water-white\">Water White</option>\r\n                  <option value=\"straw\">Straw</option>\r\n                  <option value=\"yellow\">Yellow</option>\r\n                  <option value=\"gold\">Gold</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"colorred\">\r\n                <label htmlFor=\"colorred\" aria-label=\"colorred\">\r\n                  Red Wines:\r\n                </label>\r\n                <select\r\n                  name=\"colorred\"\r\n                  value={newTasting.colorred}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"purple\">Purple</option>\r\n                  <option value=\"ruby\">Ruby</option>\r\n                  <option value=\"red\">Red</option>\r\n                  <option value=\"garnet\">Garnet</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"colorrose\">\r\n                <label htmlFor=\"colorrose\" aria-label=\"colorrose\">\r\n                  Roses:\r\n                </label>\r\n                <select\r\n                  name=\"colorrose\"\r\n                  value={newTasting.colorrose}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"ligth-pink\">Ligth Pink</option>\r\n                  <option value=\"ligth-orange\">Ligth Orange</option>\r\n                  <option value=\"tart-cherry\">Tart Cherry</option>\r\n                  <option value=\"dark-pink\">Dark Pink</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"radio-buttons\">\r\n              <h3>Rim Variation</h3>\r\n              <input\r\n                id=\"yes-rim\"\r\n                value={newTasting.rim}\r\n                name=\"rim\"\r\n                type=\"radio\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              Yes\r\n              <input\r\n                id=\"no-rim\"\r\n                value={newTasting.rim}\r\n                name=\"rim\"\r\n                type=\"radio\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              No\r\n            </div>\r\n            <div className=\"extract\">\r\n              <label htmlFor=\"extract\" aria-label=\"extract\">\r\n                Extract/Staning:\r\n              </label>\r\n              <select\r\n                name=\"extract\"\r\n                value={newTasting.extract}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"Ligth\">Ligth </option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"Heavy\">Heavy</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"tearing\">\r\n              <label htmlFor=\"tearing\" aria-label=\"tearing\">\r\n                Tearing:\r\n              </label>\r\n              <select\r\n                name=\"tearing\"\r\n                value={newTasting.tearing}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"Ligth\">Ligth </option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"Heavy\">Heavy</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"radio-buttons\">\r\n              <h3>Gas Evidence</h3>\r\n              <input\r\n                id=\"yes-gas\"\r\n                value={newTasting.gas}\r\n                name=\"gas\"\r\n                type=\"radio\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              Yes\r\n              <input\r\n                id=\"no-gas\"\r\n                value={newTasting.gas}\r\n                name=\"gas\"\r\n                type=\"radio\"\r\n                onChange={(e) => this.handleChange(e)}\r\n              />\r\n              No\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <legend>Nose</legend>\r\n            <div className=\"conditionnose\">\r\n              <label htmlFor=\"conditionnose\" aria-label=\"conditionnose\">\r\n                Condition:\r\n              </label>\r\n              <select\r\n                name=\"conditionnose\"\r\n                value={newTasting.conditionnose}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"tca\">TCA</option>\r\n                <option value=\"h2s\">H2S</option>\r\n                <option value=\"volatile-acidity\">Volatile Acidity</option>\r\n                <option value=\"ethyl-acetate\">Ethyl Acetate</option>\r\n                <option value=\"brettanomyces\">Brettanomyces</option>\r\n                <option value=\"oxidation\">Oxidation</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"intensity\">\r\n              <label htmlFor=\"intensity\" aria-label=\"intensity\">\r\n                Intensity:\r\n              </label>\r\n              <select\r\n                name=\"intensity\"\r\n                value={newTasting.intensity}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"delicate\">Delicate </option>\r\n                <option value=\"moderate\">Moderate</option>\r\n                <option value=\"powerfull\">Powerfull</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"ageassessment\">\r\n              <label htmlFor=\"ageassessment\" aria-label=\"ageassessment\">\r\n                Age Assessment:\r\n              </label>\r\n              <select\r\n                name=\"ageassessment\"\r\n                value={newTasting.ageassessment}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"youthful\">Youthful </option>\r\n                <option value=\"moderate\">Developing</option>\r\n                <option value=\"powerfull\">Vinous</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"fruitN\">\r\n              <h3>Fruit Notes</h3>\r\n              <div className=\"fruitwhite\">\r\n                <label htmlFor=\"fruitwhite\" aria-label=\"fruitwhite\">\r\n                  White Wines:\r\n                </label>\r\n                <select\r\n                  name=\"fruitwhite\"\r\n                  value={newTasting.fruitwhite}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"water-white\">Water White</option>\r\n                  <option value=\"straw\">Straw</option>\r\n                  <option value=\"yellow\">Yellow</option>\r\n                  <option value=\"gold\">Gold</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"fruitred\">\r\n                <label htmlFor=\"fruitred\" aria-label=\"fruitred\">\r\n                  Red Wines:\r\n                </label>\r\n                <select\r\n                  name=\"fruitred\"\r\n                  value={newTasting.fruitred}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"purple\">Purple</option>\r\n                  <option value=\"ruby\">Ruby</option>\r\n                  <option value=\"red\">Red</option>\r\n                  <option value=\"garnet\">Garnet</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"fruitrose\">\r\n                <label htmlFor=\"fruitrose\" aria-label=\"fruitrose\">\r\n                  Roses:\r\n                </label>\r\n                <select\r\n                  name=\"fruitrose\"\r\n                  value={newTasting.fruitrose}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"ligth-pink\">Ligth Pink</option>\r\n                  <option value=\"ligth-orange\">Ligth Orange</option>\r\n                  <option value=\"tart-cherry\">Tart Cherry</option>\r\n                  <option value=\"dark-pink\">Dark Pink</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <legend>Palate</legend>\r\n            <div className=\"sweetness\">\r\n              <label htmlFor=\"sweetness\" aria-label=\"sweetness\">\r\n                Sweetness:\r\n              </label>\r\n              <select\r\n                name=\"sweetness\"\r\n                value={newTasting.sweetness}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"tca\">TCA</option>\r\n                <option value=\"h2s\">H2S</option>\r\n                <option value=\"volatile-acidity\">Volatile Acidity</option>\r\n                <option value=\"ethyl-acetate\">Ethyl Acetate</option>\r\n                <option value=\"brettanomyces\">Brettanomyces</option>\r\n                <option value=\"oxidation\">Oxidation</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"fruitN\">\r\n              <h3>Fruit Flavours</h3>\r\n              <div className=\"item\">\r\n                <h4 className=\"gray\">White Wines</h4>\r\n                <label>\r\n                  Citrus\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfwhite}\r\n                    name=\"fruitfwhite\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Apple/Pear\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfwhite}\r\n                    name=\"fruitfwhite\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Tropical/Melon\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfwhite}\r\n                    name=\"fruitfwhite\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div>\r\n              <div className=\"item\">\r\n                <h4 className=\"gray\">Red Wines</h4>\r\n                <label>\r\n                  Red\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfred}\r\n                    name=\"fruitfred\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Black\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfred}\r\n                    name=\"fruitfred\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Blue\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.fruitfred}\r\n                    name=\"fruitfred\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div>\r\n              <div className=\"item\">\r\n                <h4 className=\"red-f\">Non-fruit</h4>\r\n                <label>\r\n                  Floral\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.nonfruit}\r\n                    name=\"nonfruit\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Vegetable\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.nonfruit}\r\n                    name=\"nonfruit\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Herbal\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.nonfruit}\r\n                    name=\"nonfruit\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Spice\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.nonfruit}\r\n                    name=\"nonfruit\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Animal\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.nonfruit}\r\n                    name=\"nonfruit\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div>\r\n              <div className=\"item\">\r\n                <h4 className=\"red-f\">Earth</h4>\r\n                <label>\r\n                  Florest Floor\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.earth}\r\n                    name=\"earth\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Compost\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.earth}\r\n                    name=\"earth\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Mushrooms\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.earth}\r\n                    name=\"earth\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Potting Soil\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.earth}\r\n                    name=\"earth\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div>\r\n              <div className=\"item\">\r\n                <h4 className=\"red-f\">Mineral</h4>\r\n                <label>\r\n                  Mineral\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.mineral}\r\n                    name=\"mineral\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Wet Stone\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.mineral}\r\n                    name=\"mineral\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Limestone\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.mineral}\r\n                    name=\"mineral\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Chalk\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.mineral}\r\n                    name=\"mineral\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n                <label>\r\n                  Flint\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={newTasting.mineral}\r\n                    name=\"mineral\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"tannins\" aria-label=\"tannins\">\r\n                Tannins:\r\n              </label>\r\n              <select\r\n                name=\"tannins\"\r\n                value={newTasting.tannins}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"med-\">Med-</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"med+\">Med+</option>\r\n                <option value=\"high\">High</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"acidity\" aria-label=\"acidity\">\r\n                Acidity:\r\n              </label>\r\n              <select\r\n                name=\"acidity\"\r\n                value={newTasting.acidity}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"med-\">Med-</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"med+\">Med+</option>\r\n                <option value=\"high\">High</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"alcohol\" aria-label=\"alcohol\">\r\n                Alcohol:\r\n              </label>\r\n              <select\r\n                name=\"alcohol\"\r\n                value={newTasting.alcohol}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"med-\">Med-</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"med+\">Med+</option>\r\n                <option value=\"high\">High</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"complexity\" aria-label=\"complexity\">\r\n                Complexity:\r\n              </label>\r\n              <select\r\n                name=\"complexity\"\r\n                value={newTasting.complexity}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"med-\">Med-</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"med+\">Med+</option>\r\n                <option value=\"high\">High</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"length\" aria-label=\"length\">\r\n                Length:\r\n              </label>\r\n              <select\r\n                name=\"length\"\r\n                value={newTasting.length}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"short\">Short</option>\r\n                <option value=\"med-\">Med-</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"med+\">Med+</option>\r\n                <option value=\"long\">Long</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"body\" aria-label=\"body\">\r\n                Body:\r\n              </label>\r\n              <select\r\n                name=\"body\"\r\n                value={newTasting.body}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"ligth\">Ligth</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"full\">Full</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"texture\" aria-label=\"texture\">\r\n                Texture:\r\n              </label>\r\n              <select\r\n                name=\"texture\"\r\n                value={newTasting.texture}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"creamy\">Creamy</option>\r\n                <option value=\"round\">Round</option>\r\n                <option value=\"lean\">Lean</option>\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <legend>Conclusion</legend>\r\n            <h4 className=\"red-f\">Wood</h4>\r\n            <div className=\"item\">\r\n              <h4 className=\"gray\">Age</h4>\r\n              <label>\r\n                Old\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"wood-old\"\r\n                  name=\"woodage\"\r\n                  value={newTasting.woodage}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n              <label>\r\n                New\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"wood-new\"\r\n                  name=\"woodage\"\r\n                  value={newTasting.woodage}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"item\">\r\n              <h4 className=\"gray\">Size</h4>\r\n              <label>\r\n                Small\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"woodsize\"\r\n                  name=\"woodsize\"\r\n                  value={newTasting.woodsize}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n              <label>\r\n                Large\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"woodsize\"\r\n                  name=\"woodsize\"\r\n                  value={newTasting.woodsize}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"item\">\r\n              <h4 className=\"gray\">Origin</h4>\r\n              <label>\r\n                American\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"woodorigin\"\r\n                  name=\"woodorigin\"\r\n                  value={newTasting.woodorigin}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n              <label>\r\n                French\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"woodorigin\"\r\n                  name=\"woodorigin\"\r\n                  value={newTasting.woodorigin}\r\n                  onChange={(e) => this.handleChange(e)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <h4 className=\"red-f\">Comments</h4>\r\n            <textarea\r\n              id=\"comments\"\r\n              name=\"comments\"\r\n              rows=\"5\"\r\n              cols=\"70\"\r\n              value={newTasting.comments}\r\n              onChange={(e) => this.handleChange(e)}\r\n              placeholder=\"Spectacular wine from Salta. Deep red. Complex, red and ripe fruits...\"\r\n            ></textarea>\r\n            <div className=\"score\">\r\n              <label htmlFor=\"score\" aria-label=\"score\">\r\n                Score:\r\n              </label>\r\n              <select\r\n                name=\"score\"\r\n                value={newTasting.score}\r\n                onChange={(e) => this.handleChange(e)}\r\n              >\r\n                <option value=\"\">Select...</option>\r\n                <option value=\"50\">50 </option>\r\n                <option value=\"75\">75 </option>\r\n                <option value=\"80\">80 </option>\r\n                <option value=\"85\">85</option>\r\n                <option value=\"94\">90</option>\r\n                <option value=\"100\">100</option>\r\n              </select>\r\n            </div>\r\n          </fieldset>\r\n          <button type=\"button\" onClick={this.handleClickCancel}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Edit Tasting</button>\r\n        </form>\r\n      </div>\r\n    ) : (\r\n      <h2>Loading Tasting...</h2>\r\n    );\r\n  }\r\n}\r\nexport default EditTasting;\r\n","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\Utils\\PrivateRoute.js",[],"C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\services\\auth-api-service.js",["97"],"import config from \"../config\";\r\n\r\nexport default {\r\n  postUser(user) {\r\n    return fetch(`${config.API_BASE_URL}/users`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n\r\n  loginUser(user) {\r\n    return fetch(`${config.API_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((res) =>\r\n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\r\n    );\r\n  },\r\n};\r\n","C:\\Users\\Carito\\projects\\taste-buddy-client\\src\\services\\token-service.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":1,"column":1,"nodeType":"109","endLine":7,"endColumn":3},{"ruleId":"103","severity":1,"message":"110","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"111","line":22,"column":7,"nodeType":"105","messageId":"106","endLine":22,"endColumn":17},{"ruleId":"103","severity":1,"message":"112","line":23,"column":7,"nodeType":"105","messageId":"106","endLine":23,"endColumn":15},{"ruleId":"103","severity":1,"message":"113","line":32,"column":7,"nodeType":"105","messageId":"106","endLine":32,"endColumn":17},{"ruleId":"103","severity":1,"message":"114","line":33,"column":7,"nodeType":"105","messageId":"106","endLine":33,"endColumn":16},{"ruleId":"103","severity":1,"message":"115","line":36,"column":7,"nodeType":"105","messageId":"106","endLine":36,"endColumn":18},{"ruleId":"103","severity":1,"message":"116","line":37,"column":7,"nodeType":"105","messageId":"106","endLine":37,"endColumn":17},{"ruleId":"103","severity":1,"message":"110","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"117","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":3,"column":1,"nodeType":"109","endLine":27,"endColumn":3},{"ruleId":"107","severity":1,"message":"108","line":3,"column":1,"nodeType":"109","endLine":16,"endColumn":3},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'config' is defined but never used.","'colorwhite' is assigned a value but never used.","'colorose' is assigned a value but never used.","'fruitwhite' is assigned a value but never used.","'fruitrose' is assigned a value but never used.","'fruitfwhite' is assigned a value but never used.","'fruitfrose' is assigned a value but never used.","'CountryDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]